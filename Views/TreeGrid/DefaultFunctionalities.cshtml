@using Syncfusion.EJ2


@section ControlsSection{
    <div class="control-section">

     <ejs-treegrid id="TreeGrid" dataSource="ViewBag.dataSource" height="380" childMapping="Children" treeColumnIndex="1" >
         <e-treegrid-columns>
             <e-treegrid-column field="TaskId" headerText="Task ID" textAlign="Right" width="95"></e-treegrid-column>
             <e-treegrid-column field="TaskName" headerText="Task Name" width="220"></e-treegrid-column>
             <e-treegrid-column field="StartDate" headerText=" Start Date" textAlign="Right" format="yMd" type="date" width="115"></e-treegrid-column>
             <e-treegrid-column field="EndDate" headerText=" End Date" textAlign="Right" format="yMd" type="date" width="115"></e-treegrid-column>
             <e-treegrid-column field="Duration" headerText="Duration" textAlign="Right" width="100"></e-treegrid-column>
             <e-treegrid-column field="Progress" headerText="Progress" textAlign="Right" width="105"></e-treegrid-column>
             <e-treegrid-column field="Priority" headerText="Priority" width="100"></e-treegrid-column>
         </e-treegrid-columns>
      </ejs-treegrid>
       
    </div>    
 }

@*custom code start*@

@section Meta{
                    <meta name="description" content="This example demonstrates the Default Functionalities in ASP.NET Core Tree Grid control. Explore here for more details."/>
                }

@section ActionDescription{
    <div id="action-description">
        <p>
            This sample demonstrates the default rendering of the Tree Grid with minimum configuration.
        </p>
    </div>
}

@section Description{
    <div id="description">
        <p>
            The Tree Grid is used to represent the hierarchical data in a tabular format, combining the visual representation of Grid and TreeView controls.
            It represents the data from datasource such as an array of JSON objects, OData web services, or DataManager binding data fields to columns or self-referential datasource.
        </p>
        <p>
            In this demo, the Tree Grid is populated with its minimum default settings.
        </p>
        <br>

        <p>
            More information on the Tree Grid instantiation can be found in this documentation section.
        </p>
    </div>
}

@*custom code end*@
@section Title{
                    <title>ASP.NET Core Tree Grid Default Functionalities Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Default Functionalities in ASP.NET Core Tree Grid Control</h1>
                }