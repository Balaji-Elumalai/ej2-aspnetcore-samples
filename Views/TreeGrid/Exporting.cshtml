@using Syncfusion.EJ2


@section ControlsSection{
    <div class="control-section">

        <ejs-treegrid id="TreeGrid" dataSource="ViewBag.dataSource" toolbarClick="toolbarClick" allowExcelExport="true" allowPdfExport="true" toolbar="@(new List<string>() { "ExcelExport", "CsvExport", "PdfExport"})" height="400" childMapping="Children" treeColumnIndex="1">
            <e-treegrid-columns>
                <e-treegrid-column field="TaskId" headerText="Task ID" textAlign="Right" width="90"></e-treegrid-column>
                <e-treegrid-column field="TaskName" headerText="Task Name" width="220"></e-treegrid-column>
                <e-treegrid-column field="StartDate" headerText=" Start Date" textAlign="Right" format="yMd" type="date" width="110"></e-treegrid-column>
                <e-treegrid-column field="EndDate" headerText=" End Date" textAlign="Right" format="yMd" type="date" width="110"></e-treegrid-column>
                <e-treegrid-column field="Duration" headerText="Duration" textAlign="Right" width="100"></e-treegrid-column>
                <e-treegrid-column field="Progress" headerText="Progress" textAlign="Right" width="100"></e-treegrid-column>
            </e-treegrid-columns>
        </ejs-treegrid>

    </div>

    <script>
        function toolbarClick(args) {
            var treeGridObj = document.getElementById("TreeGrid").ej2_instances[0];
            if (args.item.text === 'Excel Export') {
                treeGridObj.excelExport();
            } else if (args.item.text === 'PDF Export') {
                treeGridObj.pdfExport();
            } else if (args.item.text === 'CSV Export') {
                treeGridObj.csvExport();
            }


        }
    </script>
}

@*custom code start*@

@section Meta{
                    <meta name="description" content="This example demonstrates the Default Exporting in ASP.NET Core Tree Grid control. Explore here for more details."/>
                }

@section ActionDescription{
    <div id="action-description">
        <p>This sample demonstrates the client-side exporting of the Tree Grid, which allows you to export its data to the Excel, Pdf and CSV formats. Use the toolbar buttons to export Tree Grid data to desired format. </p>
    </div>
}

@section Description{
    <div id="description">

        <p>Tree Grid supports client-side exporting which allows you to export its data to the Excel, Pdf and CSV formats.</p>
        <p>In this demo, for the toolbar items of exporting, we have defined actions in <code>toolbarClick</code> event to export the Tree Grid data using the <code>excelExport</code>, <code>pdfExport</code> and <code>csvExport</code> methods.</p>
        <br>

        <p>
            More information on the data binding can be found in this documentation section.
        </p>
    </div>
}

@*custom code end*@
@section Title{
                    <title>ASP.NET Core Tree Grid Default Exporting Example - Syncfusion Demos </title> 
                }
@section Header{
                    <h1 class='sb-sample-text'>Example of Default Exporting in ASP.NET Core Tree Grid Control</h1>
                }